# vim: syntax=python tabstop=4 expandtab
# coding: utf-8


"""
sambamba rules
"""

rule sambamba_sort:
   input:
       "reads/aligned/{unit}_fixmate.cram"
   output:
       temp("reads/sorted/{unit}_sorted.bam")
   conda:
       "envs/sambamba.yaml"
   params:
       tmp_dir=tmp_path(path=config.get("tmp_dir"))
   benchmark:
       "benchmarks/sambamba/sam2bam_sorted/{unit}.txt"
   threads: conservative_cpu_count()
   shell:
       "sambamba view -C -S -f bam -t {threads} {input} "
       "| sambamba sort -t {threads} -m 15G --tmpdir {params.tmp_dir} "
       "-o {output} /dev/stdin"


rule sambamba_merge_bam:
    """
    Merge bam files for multiple units into one for the given sample.
    If the sample has only one unit, files will be copied.
    """
    input:
        lambda wildcards: expand(
            "reads/aligned/{unit}_sorted.bam",
            unit=config["samples"][wildcards.sample])
    output:
        "reads/merged_samples/{sample}.bam"
    conda:
        "envs/sambamba.yaml"
    benchmark:
        "benchmarks/sambamba/merge/{sample}.txt"
    params:
        cmd='sambamba'
    threads: conservative_cpu_count()
    script:
        "scripts/sambamba_merge_bam.py"

        